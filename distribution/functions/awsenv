# --- awsenv
#
#	awsenv links ~/.aws/config and ~/.aws/credentials from ~/.aws/aws-envs
#
#	without parameters it offers a menu with available envs to choose from, or pass requested env as parameter

autoload -Uz _ezerror _ezlog _ezdebug _ezdie

awsenv()
{
	
	# check for existing ~/.aws/aws-envs to verify completed setup
	
	if ! test -d ~/.aws/aws-envs
    then
		_error "[awsenv] Your ~/.aws/awsenvs in not setup. Please run aws-profile-organizer-setup"
        return 1
    fi

	# determine method of configuration 
	# environment: use AWS_CONFIG_FILE and AWS_SHARED_CREDENTIALS_FILE
	# link: use ~/.aws/config and ~/.aws/credentials linked to ~/.aws/aws-envs/<environment>

	method='environment'
    test -z "$AWS_CONFIG_FILE"  && method='link'
    
	while (( $# != 0 ))
	do
		case "${1}" in
		'--init') 	if ! test -z "${2}"
					then
						mkdir -p ~"/.aws/aws-envs/${2}"
						touch ~"/.aws/aws-envs/${2}/config"
						touch ~"/.aws/aws-envs/${2}/credentials"
						export AWS_ENV="${2}"
						_log "environment ${2} created and activated"
						break
					else
						_error "awsenv --init requires parameter"
						return 1
					fi
					;;
		'--get')	echo ${AWS_CONFIG_FILE:-$(readlink ~/.aws/config)} | rev | cut -f2 -d '/' | rev
					return 0
					;;
		'--link' | '-l' )
					method='link'
					
					;;
		'--env*' | '-e' )
					method='environment'
					;;
		*)			if  ! test -d ~"/.aws/aws-envs/${1}" 
					then
						_error "awsenv: ${1} - No such environment"
						return 1
					fi
					export AWS_ENV="${1}"
					;;
		esac
		shift
	done
	
	# interactive mode

	if test -z "$AWS_ENV" && [ $# -eq 0 ] 
	then
	    if test -t 0
	    then
			max=$( ls ~/.aws/aws-envs | wc -l | tr -d ' ' )
			ls ~/.aws/aws-envs | cat -n | column 
			echo -n "Enter environment number [1-${max}]> "; read n
			if test -n "$n" -a "$n" -gt 0 -a "$n" -le $max 2>/dev/null
			then
				export AWS_ENV=$( ls ~/.aws/aws-envs | sed -n ${n}p )
				# fall through
			else
				_error "Value out of range, environment remains $AWS_ENV"
				return 1
			fi
	    else
			_error "Usage: awsenv [environment]  -- without parameter interactive mode reads from tty"
	        return 1
	    fi
	fi

	# setup links (method=link) to AWS_ENV or change AWS_CONFIG_FILE/AWS_SHARED_CREDENTIALS_FILE (method=env)
	# and select 'default' or first profile from configure list-profiles

	if [[ "$method" == "link" ]]
	then
		( cd ~/.aws 
		rm config credentials
		ln -s aws-envs/${AWS_ENV}/config ~/.aws/config
		ln -s aws-envs/${AWS_ENV}/credentials ~/.aws/credentials
	    )
		unset AWS_CONFIG_FILE
		unset AWS_SHARED_CREDENTIALS_FILE
	else
		export AWS_CONFIG_FILE=~"/.aws/aws-envs/${AWS_ENV}/config"
		export AWS_SHARED_CREDENTIALS_FILE=~"/.aws/aws-envs/${AWS_ENV}/credentials"
	fi
	unset AWS_ENV

	# activate either default profile or first in list

	if aws configure list-profiles | grep -wq 'default'
	then
		export AWS_PROFILE=default
	else
		# this creates real nasty errors when many profiles exist => ignore &2
		export AWS_PROFILE=$( aws configure list-profiles 2> /dev/null |  head -n1 )
	fi
}
